name: Create Release

on:
  push:
    tags:
      - "v*" # This workflow will run when any tag starting with 'v' is pushed

# Add permissions configuration
permissions:
  contents: write

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # We need full history to get commit messages

      - name: Install Chinese fonts and Typst
        run: |
          # Install minimal Chinese fonts (faster)
          sudo apt-get update
          sudo apt-get install -y fonts-wqy-zenhei
          
          # Install Typst
          curl -fsSL https://github.com/typst/typst/releases/latest/download/typst-x86_64-unknown-linux-musl.tar.xz | tar -xJ
          sudo mv typst-x86_64-unknown-linux-musl/typst /usr/local/bin/
          typst --version

      - name: Get previous tag
        id: previoustag
        run: |
          echo "PREVIOUS_TAG=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo '')" >> $GITHUB_ENV
          echo "CURRENT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Generate release notes
        id: generate_notes
        shell: sh -e {0}
        run: |
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            echo "## Changes since $PREVIOUS_TAG" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            git log --pretty=format:"* %s (%an) [%h](https://github.com/jiahaoxiang2000/typesetting/commit/%H)" $PREVIOUS_TAG..$CURRENT_TAG >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            echo "## Initial Release" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            git log --pretty=format:"* %s (%an) [%h](https://github.com/jiahaoxiang2000/typesetting/commit/%H)" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Compile Typst documents
        run: |
          cd typst
          mkdir -p build
          find . -name "*.typ" -type f -not -path "./build/*" | while read file; do
            filename=$(basename "$file" .typ)
            echo "Compiling $filename.typ"
            typst compile "$file" "build/${filename}.pdf"
          done
          cd ..

      - name: List generated PDFs
        run: |
          echo "Generated PDFs in typst/build:"
          ls -la typst/build || echo "No PDFs found in typst/build"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ env.CURRENT_TAG }}
          body: ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false
          files: |
            typst/build/*.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
